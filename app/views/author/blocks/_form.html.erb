<% data = block.data.to_h %>

<%= form_with model: [:author, document, block.becomes(Block)],
              data: { turbo_frame: dom_id(block) },
              class: "space-y-3" do |f| %>

  <% case block.type
     when "MarkdownBlock" %>
    <div data-controller="markdown-preview">
      <!-- Monaco Editor Wrapper -->
      <div data-controller="monaco-editor" data-monaco-editor-language-value="markdown" class="relative">
        <!-- Fullscreen Button -->
        <button type="button"
                data-monaco-editor-target="fullscreenButton"
                data-action="click->monaco-editor#toggleFullscreen"
                class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                title="Fullscreen"
                style="display: none;">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
          </svg>
        </button>

        <!-- Fallback notice for small screens -->
        <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
          ðŸ“± Code editor requires a larger screen (min 768px width). Using simplified textarea.
        </div>

        <!-- Monaco editor container -->
        <div data-monaco-editor-target="editor" style="display: none;"></div>

        <!-- Original textarea (hidden when Monaco loads) -->
        <%= f.text_area :data_markdown, value: data["markdown"], rows: 6,
            class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2 font-mono",
            data: {
              monaco_editor_target: "textarea",
              controller: "textarea-tab",
              action: "input->markdown-preview#update",
              "markdown-preview-target": "input"
            } %>
      </div>

      <div data-markdown-preview-target="preview"
          class="mt-2 p-2 border dark:border-gray-600 rounded bg-gray-50 dark:bg-gray-900 text-sm font-mono dark:text-gray-300"></div>
    </div>

  <% when "CodeBlock" %>
    <!-- Language and Filename -->
    <div class="space-y-2">
      <%= f.text_field :language_name, value: block.language_name,
          list: "languages_form_#{block.object_id}",
          class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2",
          placeholder: "Language (e.g., ruby)" %>

      <datalist id="languages_form_<%= block.object_id %>">
        <% Language.by_name.each do |language| %>
          <option value="<%= language.name %>"><%= language.name %></option>
        <% end %>
      </datalist>

      <%= f.text_field :data_filename, value: block.filename,
          class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2",
          placeholder: "Filename (optional)" %>

      <!-- Hidden Interactive Toggle (controlled from toolbar) -->
      <%= f.hidden_field :interactive, value: block.interactive? ? "1" : "0" %>
    </div>

    <!-- Monaco Editor Wrapper -->
    <% code_language = block.is_a?(CodeBlock) ? (block.languages.first || data["language"] || "plaintext") : "plaintext" %>
    <div data-controller="monaco-editor" data-monaco-editor-language-value="<%= code_language %>" class="relative">
      <!-- Fullscreen Button -->
      <button type="button"
              data-monaco-editor-target="fullscreenButton"
              data-action="click->monaco-editor#toggleFullscreen"
              class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
              title="Fullscreen"
              style="display: none;">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
        </svg>
      </button>

      <!-- Fallback notice for small screens -->
      <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
        ðŸ“± Code editor requires a larger screen (min 768px width). Using simplified textarea.
      </div>

      <!-- Monaco editor container -->
      <div data-monaco-editor-target="editor" style="display: none;"></div>

      <!-- Original textarea (hidden when Monaco loads) -->
      <%= f.text_area :data_code, value: data["code"], rows: 6,
          class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2 font-mono",
          data: {
            monaco_editor_target: "textarea",
            controller: "textarea-tab"
          },
          placeholder: "Code snippet..." %>
    </div>

  <% when "HtmlBlock" %>
    <!-- Monaco Editor Wrapper -->
    <div data-controller="monaco-editor" data-monaco-editor-language-value="html" class="relative">
      <!-- Fullscreen Button -->
      <button type="button"
              data-monaco-editor-target="fullscreenButton"
              data-action="click->monaco-editor#toggleFullscreen"
              class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
              title="Fullscreen"
              style="display: none;">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
        </svg>
      </button>

      <!-- Fallback notice for small screens -->
      <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
        ðŸ“± Code editor requires a larger screen (min 768px width). Using simplified textarea.
      </div>

      <!-- Monaco editor container -->
      <div data-monaco-editor-target="editor" style="display: none;"></div>

      <!-- Original textarea (hidden when Monaco loads) -->
      <%= f.text_area :data_html, value: data["html"], rows: 6,
          class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2",
          data: {
            monaco_editor_target: "textarea",
            controller: "textarea-tab"
          },
          placeholder: "HTML text here..." %>
    </div>

  <% when "ImageBlock" %>
    <div class="space-y-4">
      <!-- Caption -->
      <%= f.text_field :data_caption, value: data["caption"],
          class: "w-full rounded border dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 px-3 py-2",
          placeholder: "Caption (optional)..." %>

      <!-- Current Images -->
      <% if block.persisted? && block.images.any? %>
        <div class="space-y-3">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Current Images</label>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
            <% block.images.each_with_index do |image, index| %>
              <div class="relative group">
                <%= image_tag image, class: "w-full h-24 object-cover rounded border dark:border-gray-600", alt: "Image #{index + 1}" %>
                <%= link_to "Ã—", remove_image_author_document_block_path(document, block, image.id),
                    method: :delete,
                    data: {
                      turbo_method: :delete,
                      turbo_confirm: "Remove this image?"
                    },
                    class: "absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-600" %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>

      <!-- Image Upload -->
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          <%= block.persisted? ? "Add More Images" : "Upload Images" %>
        </label>
        <%= f.file_field :images,
            multiple: true,
            accept: "image/*",
            class: "block w-full text-sm text-gray-500 dark:text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-orange-50 dark:file:bg-orange-900 file:text-orange-700 dark:file:text-orange-300 hover:file:bg-orange-100 dark:hover:file:bg-orange-800" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Select multiple images. PNG, JPG, JPEG up to 10MB each</p>
      </div>
    </div>

  <% when "Mlx42Block" %>
    <div class="space-y-3">
      <!-- Monaco Editor Wrapper -->
      <div data-controller="monaco-editor" data-monaco-editor-language-value="c" class="relative">
        <!-- Fullscreen Button -->
        <button type="button"
                data-monaco-editor-target="fullscreenButton"
                data-action="click->monaco-editor#toggleFullscreen"
                class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                title="Fullscreen"
                style="display: none;">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
          </svg>
        </button>

        <!-- Fallback notice for small screens -->
        <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
          ðŸ“± Code editor requires a larger screen (min 768px width). Using simplified textarea.
        </div>

        <!-- Monaco editor container -->
        <div data-monaco-editor-target="editor" style="display: none;"></div>

        <!-- Original textarea (hidden when Monaco loads) -->
        <%= f.text_area :text,
            value: block.text,
            rows: 15,
            data: {
              monaco_editor_target: "textarea",
              controller: "textarea-tab"
            },
            class: "w-full font-mono text-sm bg-gray-900 text-gray-100 p-4 rounded border-0",
            placeholder: "void user_main(int argc, char **argv) {\n  extern mlx_t *mlx;\n  // Your MLX42 code here\n}" %>
      </div>
      <p class="text-xs text-gray-500 dark:text-gray-400">Entry point: <code class="bg-gray-100 dark:bg-gray-800 dark:text-gray-300 px-1 rounded">void user_main(int argc, char **argv)</code></p>
    </div>
  <% end %>

  <div class="flex items-center gap-3">
    <%= f.hidden_field :type %>
    <%= f.hidden_field :position, value: block.position || document.blocks.count %>
    <%= f.submit block.persisted? ? "Update Block" : "Add Block",
          class: "rounded bg-indigo-600 dark:bg-indigo-700 text-white px-4 py-2 hover:bg-indigo-700 dark:hover:bg-indigo-600" %>
  </div>
<% end %>
