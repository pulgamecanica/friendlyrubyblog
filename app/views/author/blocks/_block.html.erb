<turbo-frame id="<%= dom_id(block) %>">
  <article class="grid grid-cols-[1fr_200px] gap-4 group"
           data-controller="block-editor<%= ' image-carousel' if block.is_a?(ImageBlock) && block.images.count > 1 %><%= ' code-executor' if block.is_a?(CodeBlock) %><%= ' mlx42-preview' if block.is_a?(Mlx42Block) %>"
           <% if block.is_a?(ImageBlock) && block.images.count > 1 %>
             data-image-carousel-count-value="<%= block.images.count %>"
           <% end %>
           <% if block.is_a?(CodeBlock) %>
             data-code-executor-block-id-value="<%= block.id %>"
             data-code-executor-document-id-value="<%= block.document.id %>"
           <% end %>
           data-block-editor-block-id-value="<%= block.id %>"
           data-block-editor-preview-url-value="<%= preview_author_document_blocks_path(block.document) %>">

    <!-- Main Content Column -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden">

      <!-- Normal Mode: Rendered Content (shown by default) -->
      <div data-block-editor-target="content"
           data-action="click->block-editor#handleContentClick"
           class="relative cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors h-full focus:outline-none">

        <div class="p-4 h-full">
          <% if block.is_a?(MarkdownBlock) %>
            <div class="prose prose-neutral dark:prose-invert max-w-none h-full prose-pre:!bg-gray-900 prose-pre:!text-gray-100">
              <%= safe_html(text_to_markdown(block.data["markdown"].to_s)) %>
            </div>
          <% elsif block.is_a?(CodeBlock) %>
            <!-- Interactive Mode: Side-by-side layout - ALWAYS PRESENT -->
            <div data-block-editor-target="interactiveLayout" class="grid grid-cols-2 gap-4 h-full" style="<%= block.interactive? ? '' : 'display: none;' %>">
              <!-- Code Column -->
              <div class="bg-gray-900 text-gray-100 rounded-lg overflow-hidden flex flex-col"
                   data-controller="syntax-highlighter"
                   data-syntax-highlighter-language-value="<%= block.language_name %>">
                <% if block.filename.present? %>
                  <div class="bg-gray-950 px-4 py-2 text-xs text-gray-300 border-b border-gray-700">
                    <%= block.filename %>
                  </div>
                <% end %>
                <pre class="p-4 overflow-x-auto text-sm flex-1 [&::-webkit-scrollbar]:h-2 [&::-webkit-scrollbar-track]:bg-gray-800 [&::-webkit-scrollbar-thumb]:bg-gray-600 [&::-webkit-scrollbar-thumb]:rounded-full hover:[&::-webkit-scrollbar-thumb]:bg-gray-500"><code class="language-<%= block.language&.extension || block.data["language"] %>"><%= block.data["code"] %></code></pre>
              </div>

              <!-- Console Column -->
              <div class="bg-gray-900 text-gray-100 rounded-lg overflow-hidden">
                <div class="bg-gray-950 px-4 py-2 text-xs text-gray-300 border-b border-gray-700">
                  Console Output
                </div>
                <div class="p-4" data-code-executor-target="console">
                  <% if block.execution_result.present? %>
                    <div class="text-sm font-mono">
                      <% has_error = block.execution_result['error'].present? %>
                      <% has_output = block.execution_result['output'].present? %>
                      <% exit_code = block.execution_result['exit_code'] %>

                      <% if has_error %>
                        <div class="text-red-400 text-xs mb-2">‚ùå Error (exit code: <%= exit_code %>)</div>
                        <pre class="whitespace-pre-wrap text-red-300"><%= block.execution_result['error'] %></pre>
                      <% elsif has_output %>
                        <div class="text-green-400 text-xs mb-2">
                          ‚úÖ Executed in <%= block.execution_result['execution_time'] %>s (exit code: <%= exit_code %>)
                        </div>
                        <pre class="whitespace-pre-wrap text-gray-100"><%= block.execution_result['output'] %></pre>
                      <% else %>
                        <div class="text-gray-400 text-xs mb-2">
                          ‚ÑπÔ∏è No output (exit code: <%= exit_code %>)
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-gray-500 text-sm">
                      <div class="text-xs mb-2">üíª Ready to run</div>
                      <div class="text-xs">Click "Run Code" in the toolbar to execute</div>
                    </div>
                  <% end %>
                </div>
              </div>
            </div>

            <!-- Non-interactive Mode: Single code block - ALWAYS PRESENT -->
            <div data-block-editor-target="singleLayout" class="bg-gray-900 text-gray-100 rounded-lg overflow-hidden h-full flex flex-col"
                 data-controller="syntax-highlighter"
                 data-syntax-highlighter-language-value="<%= block.language_name %>"
                 style="<%= block.interactive? ? 'display: none;' : '' %>">
              <% if block.filename.present? %>
                <div class="bg-gray-950 px-4 py-2 text-xs text-gray-300 border-b border-gray-700">
                  <%= block.filename %>
                </div>
              <% end %>
              <pre class="p-4 overflow-x-auto text-sm flex-1 [&::-webkit-scrollbar]:h-2 [&::-webkit-scrollbar-track]:bg-gray-800 [&::-webkit-scrollbar-thumb]:bg-gray-600 [&::-webkit-scrollbar-thumb]:rounded-full hover:[&::-webkit-scrollbar-thumb]:bg-gray-500"><code class="language-<%= block.language&.extension || block.data["language"] %>" data-syntax-highlighter-target="code"><%= block.data["code"] %></code></pre>
            </div>
          <% elsif block.is_a?(ImageBlock) %>
            <%= render_image_block(block, clickable: false) %>
          <% elsif block.is_a?(Mlx42Block) %>
            <!-- Canvas Preview (MLX42 running) - Now shown by default -->
            <div data-mlx42-preview-target="canvasView">
              <%= render "author/blocks/mlx42_canvas", block: block %>
            </div>
          <% else %>
            <div class="prose prose-neutral max-w-none">
              <%= safe_html(block.data["html"].to_s) %>
            </div>
          <% end %>
        </div>

        <!-- Fade overlay for collapsed state -->
        <div data-block-editor-target="fadeOverlay"
             class="absolute bottom-0 left-0 right-0 h-16 bg-gradient-to-t from-white dark:from-gray-800 via-white/80 dark:via-gray-800/80 to-transparent pointer-events-none transition-opacity duration-300"
             style="opacity: 0;"></div>
      </div>

      <!-- Edit Mode: Editor Interface (hidden by default) -->
      <div data-block-editor-target="editor"
           class="p-4"
           style="display: none;">

        <% if block.is_a?(MarkdownBlock) %>
          <!-- Markdown Editor -->
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-4" do |f| %>

            <!-- Editor Container (layout changes based on preview settings) -->
            <div data-block-editor-target="editorContainer" class="grid grid-cols-1 gap-4">

              <!-- Textarea -->
              <div data-block-editor-target="textareaContainer">
                <!-- Monaco Editor Wrapper -->
                <div data-controller="monaco-editor" data-monaco-editor-language-value="markdown" class="relative">
                  <!-- Fullscreen Button -->
                  <button type="button"
                          data-monaco-editor-target="fullscreenButton"
                          data-action="click->monaco-editor#toggleFullscreen"
                          class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                          title="Fullscreen"
                          style="display: none;">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
                    </svg>
                  </button>

                  <!-- Fallback notice for small screens -->
                  <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
                    üì± Code editor requires a larger screen (min 768px width). Using simplified textarea.
                  </div>

                  <!-- Monaco editor container -->
                  <div data-monaco-editor-target="editor" style="display: none;"></div>

                  <!-- Original textarea (hidden when Monaco loads) -->
                  <%= f.text_area :data_markdown,
                      value: block.data["markdown"],
                      data: {
                        monaco_editor_target: "textarea",
                        controller: "textarea-tab",
                        block_editor_target: "textarea",
                        action: "input->block-editor#renderPreview input->block-editor#autoResize"
                      },
                      class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg overflow-hidden p-3 font-mono text-sm resize-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                      placeholder: "Write your markdown here...",
                      rows: 8 %>
                </div>
              </div>

              <!-- Preview (positioned dynamically) -->
              <div data-block-editor-target="preview"
                   class="border border-gray-200 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-900">
                <div class="p-3 border-b border-gray-200 dark:border-gray-600 text-xs font-medium text-gray-600 dark:text-gray-400 uppercase tracking-wider">
                  Preview
                </div>
                <div class="p-4 prose prose-neutral dark:prose-invert max-w-none prose-pre:!bg-gray-900 prose-pre:!text-gray-100">
                  <%= safe_html(text_to_markdown(block.data["markdown"].to_s)) %>
                </div>
              </div>
            </div>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>

        <% elsif block.is_a?(CodeBlock) %>
          <!-- Code Editor -->
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-3" do |f| %>

            <!-- Language and Filename -->
            <div class="space-y-3">
              <!-- Language Selection -->
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Language</label>
                <%= f.text_field :language_name,
                    value: block.language_name,
                    list: "languages_#{block.id}",
                    class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                    placeholder: "Language (e.g., ruby, javascript)" %>

                <datalist id="languages_<%= block.id %>">
                  <% Language.by_name.each do |language| %>
                    <option value="<%= language.name %>"><%= language.name %></option>
                  <% end %>
                </datalist>
              </div>

              <!-- Filename (Optional) -->
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Filename (optional)</label>
                <%= f.text_field :data_filename,
                    value: block.filename,
                    class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                    placeholder: "e.g., main.rb, app.js, hello.py" %>
              </div>

              <!-- Hidden Interactive Toggle (controlled from toolbar) -->
              <%= f.hidden_field :interactive, value: block.interactive? ? "1" : "0" %>

              <% if block.language && !block.language.interactive? %>
                <p class="text-xs text-gray-500 dark:text-gray-400">This language doesn't support interactive mode yet.</p>
              <% end %>
            </div>

            <!-- Monaco Editor Wrapper -->
            <% code_language = block.languages.first || "plaintext" %>
            <div data-controller="monaco-editor" data-monaco-editor-language-value="<%= code_language %>" class="relative">
              <!-- Fullscreen Button -->
              <button type="button"
                      data-monaco-editor-target="fullscreenButton"
                      data-action="click->monaco-editor#toggleFullscreen"
                      class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                      title="Fullscreen"
                      style="display: none;">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
                </svg>
              </button>

              <!-- Fallback notice for small screens -->
              <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
                üì± Code editor requires a larger screen (min 768px width). Using simplified textarea.
              </div>

              <!-- Monaco editor container -->
              <div data-monaco-editor-target="editor" style="display: none;"></div>

              <!-- Original textarea (hidden when Monaco loads) -->
              <%= f.text_area :data_code,
                  value: block.data["code"],
                  data: {
                    monaco_editor_target: "textarea",
                    controller: "textarea-tab"
                  },
                  class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg p-3 font-mono text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                  placeholder: "Enter your code here...",
                  rows: 12 %>
            </div>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>

        <% elsif block.is_a?(ImageBlock) %>
          <!-- Image Block Editor -->
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-4" do |f| %>

            <!-- Caption -->
            <%= f.text_field :data_caption,
                value: block.data["caption"],
                class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                placeholder: "Caption (optional)..." %>

            <!-- Current Images -->
            <% if block.persisted? && block.images.any? %>
              <div class="space-y-3">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Current Images</label>
                <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
                  <% block.images.each_with_index do |image, index| %>
                    <div class="relative group">
                      <%= image_tag image, class: "w-full h-20 object-cover rounded border dark:border-gray-600", alt: "Image #{index + 1}" %>
                      <%= link_to "√ó", remove_image_author_document_block_path(block.document, block, image.id),
                          method: :delete,
                          data: {
                            turbo_method: :delete,
                            turbo_confirm: "Remove this image?"
                          },
                          class: "absolute top-1 right-1 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-600" %>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>

            <!-- Image Upload -->
            <div>
              <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                <%= block.persisted? ? "Add More Images" : "Upload Images" %>
              </label>
              <%= f.file_field :images,
                  multiple: true,
                  accept: "image/*",
                  class: "block w-full text-sm text-gray-500 dark:text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-orange-50 dark:file:bg-orange-900 file:text-orange-700 dark:file:text-orange-300 hover:file:bg-orange-100 dark:hover:file:bg-orange-800" %>
              <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Select multiple images. PNG, JPG, JPEG up to 10MB each</p>
            </div>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>
        <% elsif block.is_a?(HtmlBlock) %>
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-3" do |f| %>

            <!-- Monaco Editor Wrapper -->
            <div data-controller="monaco-editor" data-monaco-editor-language-value="html" class="relative">
              <!-- Fullscreen Button -->
              <button type="button"
                      data-monaco-editor-target="fullscreenButton"
                      data-action="click->monaco-editor#toggleFullscreen"
                      class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                      title="Fullscreen"
                      style="display: none;">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
                </svg>
              </button>

              <!-- Fallback notice for small screens -->
              <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
                üì± Code editor requires a larger screen (min 768px width). Using simplified textarea.
              </div>

              <!-- Monaco editor container -->
              <div data-monaco-editor-target="editor" style="display: none;"></div>

              <!-- Original textarea (hidden when Monaco loads) -->
              <%= f.text_area :data_html,
                  value: block.data["html"],
                  data: {
                    monaco_editor_target: "textarea",
                    controller: "textarea-tab"
                  },
                  class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg p-3 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                  placeholder: "Enter HTML content...",
                  rows: 12 %>
            </div>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>
        <% elsif block.is_a?(Mlx42Block) %>
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-3" do |f| %>

            <div data-controller="mlx42-file-editor" data-mlx42-file-editor-block-id-value="<%= block.id %>">
              <!-- File Tabs -->
              <div class="bg-gray-100 dark:bg-gray-800 p-2 rounded-t border border-gray-300 dark:border-gray-600"
                   data-action="click->mlx42-file-editor#preventBubble">
                <div class="flex gap-2 overflow-x-auto" data-mlx42-file-editor-target="tabsContainer">
                  <!-- Tabs will be rendered here by Stimulus -->
                </div>
              </div>

              <!-- Hidden field to store files JSON -->
              <%= f.hidden_field :data_files,
                  value: block.files.any? ? block.files.to_json : nil,
                  data: { mlx42_file_editor_target: "filesInput" } %>

              <!-- Monaco Editor Wrapper -->
              <div data-mlx42-file-editor-target="monacoContainer">
                <div data-controller="monaco-editor" data-monaco-editor-language-value="c" class="relative">
                  <!-- Fullscreen Button -->
                  <button type="button"
                          data-monaco-editor-target="fullscreenButton"
                          data-action="click->monaco-editor#toggleFullscreen"
                          class="absolute top-2 right-2 z-50 p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors border border-gray-300 dark:border-gray-600"
                          title="Fullscreen"
                          style="display: none;">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"/>
                    </svg>
                  </button>

                  <!-- Fallback notice for small screens -->
                  <div data-monaco-editor-target="fallbackNotice" style="display: none;" class="mb-2 p-2 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded text-xs text-yellow-700 dark:text-yellow-300">
                    üì± Code editor requires a larger screen (min 768px width). Using simplified textarea.
                  </div>

                  <!-- Monaco editor container -->
                  <div data-monaco-editor-target="editor" style="display: none;"></div>

                  <!-- Original textarea (hidden when Monaco loads) -->
                  <textarea rows="15"
                      data-monaco-editor-target="textarea"
                      data-block-editor-target="textarea"
                      data-action="input->block-editor#autoResize"
                      data-controller="textarea-tab"
                      class="w-full font-mono text-sm bg-gray-900 text-gray-100 p-4 rounded border-0 focus:ring-2 focus:ring-purple-500"
                      placeholder="#include <MLX42/MLX42.h>\n\nvoid user_main(int argc, char **argv) {\n  extern mlx_t *mlx;\n  // Your MLX42 code here\n}"></textarea>
                </div>
              </div>
            </div>

            <%= render "author/blocks/mlx42_assets", block: block, form: f %>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>
        <% else %>
          <!-- Rich Text Editor -->
          <%= form_with model: [:author, block.document, block.becomes(Block)],
                        data: { turbo_frame: dom_id(block) },
                        class: "space-y-3" do |f| %>

            <%= f.text_area :data_html,
                value: block.data["html"],
                data: { controller: "textarea-tab" },
                class: "w-full border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg p-3 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                placeholder: "Content not yet supported...",
                rows: 12 %>

            <%= f.hidden_field :type %>
            <%= f.hidden_field :position %>

            <!-- Hidden submit button (triggered from toolbar) -->
            <%= f.submit "Update Block", style: "display: none;", data: { block_editor_target: "hiddenSubmit" } %>
          <% end %>
        <% end %>
      </div>
    </div>

    <%= render "author/blocks/toolbar", block: block %>
  </article>
</turbo-frame>
