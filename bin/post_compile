#!/usr/bin/env bash
# Heroku post-compile hook to install Emscripten and build MLX42

set -e

echo "-----> Installing Emscripten and MLX42"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

cd $BUILD_DIR

# Define installation directories
EMSDK_DIR="$BUILD_DIR/.emsdk"
MLX42_DIR="$BUILD_DIR/.mlx42"
INSTALL_DIR="$BUILD_DIR/vendor/mlx42"

# Install Emscripten if not cached
if [ ! -d "$CACHE_DIR/emsdk" ]; then
  echo "-----> Installing Emscripten SDK"
  git clone --depth 1 https://github.com/emscripten-core/emsdk.git "$CACHE_DIR/emsdk"
  cd "$CACHE_DIR/emsdk"
  ./emsdk install latest
  ./emsdk activate latest
else
  echo "-----> Using cached Emscripten SDK"
fi

# Copy emsdk from cache to build
cp -r "$CACHE_DIR/emsdk" "$EMSDK_DIR"

# Source Emscripten environment
source "$EMSDK_DIR/emsdk_env.sh"

# Build MLX42 for WebAssembly if not cached
if [ ! -d "$CACHE_DIR/mlx42" ]; then
  echo "-----> Building MLX42 for WebAssembly"
  git clone --depth 1 https://github.com/codam-coding-college/MLX42.git "$MLX42_DIR"
  cd "$MLX42_DIR"

  # Build with Emscripten
  mkdir -p build
  cd build
  emcmake cmake .. -DCMAKE_BUILD_TYPE=Release
  emmake make -j$(nproc)

  # Cache the built library
  mkdir -p "$CACHE_DIR/mlx42"
  cp -r "$MLX42_DIR/build" "$CACHE_DIR/mlx42/"
  cp -r "$MLX42_DIR/include" "$CACHE_DIR/mlx42/"
else
  echo "-----> Using cached MLX42"
fi

# Copy MLX42 to vendor directory
echo "-----> Installing MLX42 to vendor directory"
mkdir -p "$INSTALL_DIR"
cp -r "$CACHE_DIR/mlx42"/* "$INSTALL_DIR/"

# Copy the compiled library to app/assets
echo "-----> Copying libmlx42.a to app/assets"
cp "$INSTALL_DIR/build/libmlx42.a" "$BUILD_DIR/app/assets/libmlx42_web.a"

echo "-----> MLX42 installation complete"
